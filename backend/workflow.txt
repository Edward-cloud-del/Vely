1. /backend/src/routes/ai-enhanced.js
ROL: Huvud-endpoint f√∂r AI-requests fr√•n frontend
ANSVAR: HTTP routing, request validation, response formatting
ANROPAR: ‚Üí enhanced-ai-processor.js
2. /backend/src/routes/ai.ts
ROL: Legacy/alternativ AI endpoint
ANSVAR: √Ñldre AI-logik, fallback routes
ANROPAR: ‚Üí Diverse AI services direkt
üéØ HUVUDORKESTRERING (MASTER CONTROLLER)
3. /backend/src/services/pipeline/enhanced-ai-processor.js
ROL: üöÄ HJ√ÑRTAT I SYSTEMET - Huvudorkestrator f√∂r alla AI requests
ANSVAR:
Request validation
Question classification
User profile loading
Cache management
Service routing
Response optimization
Error handling
ANROPAR: ‚Üí Alla andra komponenter
FL√ñDE:
validateRequest()
classifyQuestion()
getUserProfile()
Cache check
smartRouter.routeRequest()
executeService()
Response optimization
üß† INTELLIGENS & ROUTING (DECISION MAKING)
4. /backend/src/services/classification/question-classifier.js
ROL: Klassificerar anv√§ndarfr√•gor
ANSVAR: Avg√∂r om fr√•ga √§r PURE_TEXT, OBJECT_COUNT, CELEBRITY_ID, etc.
ANV√ÑNDS AV: Enhanced AI Processor
5. /backend/src/services/classification/model-selector.js
ROL: V√§ljer r√§tt AI-modell baserat p√• fr√•getyp
ANSVAR: GPT-4, GPT-3.5, Vision-modeller
ANV√ÑNDS AV: Smart Router
6. /backend/src/services/routing/smart-router.js
ROL: üéØ INTELLIGENT ROUTING - Avg√∂r vilken service som ska anv√§ndas
ANSVAR: Kombinerar question type, user tier, cost optimization
ANV√ÑNDER: Question Classifier, Model Selector, Tier Access, Cost Optimizer
RESULTERAR I: Routing decision (service + model + parameters)
7. /backend/src/services/routing/tier-access.js
ROL: Kontrollerar vad olika user tiers f√•r anv√§nda
ANSVAR: free/pro/premium access control
LOGIK: free‚ÜíOCR, pro‚ÜíObjects, premium‚ÜíCelebrities
8. /backend/src/services/routing/cost-optimizer.js
ROL: Optimerar kostnader baserat p√• budget
ANSVAR: V√§ljer billigare alternativ n√§r budget √§r l√•g
9. /backend/src/services/routing/fallback-manager.js
ROL: Hanterar n√§r prim√§ra services failar
ANSVAR: Fallback chains, graceful degradation
üîß VERKST√ÑLLANDE SERVICES (ACTUAL AI WORK)
10. /backend/src/services/enhanced-services/enhanced-ocr.js
ROL: üìù HYBRID OCR SYSTEM - Text extraction fr√•n bilder
ANSVAR:
Tesseract.js (prim√§r, gratis)
Google Vision fallback
Quality validation
Preprocessing
FL√ñDE: tesseractOCR() ‚Üí quality check ‚Üí googleVisionFallback() if needed
11. /backend/src/services/enhanced-services/google-vision.js
ROL: üëÅÔ∏è GOOGLE VISION API - Object detection, celebrities, web search
ANSVAR:
detectText() - OCR
detectObjects() - Object detection
detectCelebritiesAndWeb() - Celebrity ID
detectLogos() - Logo recognition
12. /backend/src/services/ai-processor.js
ROL: ü§ñ OPENAI INTEGRATION - GPT models, vision
ANSVAR: OpenAI API calls, intelligent responses
ANV√ÑNDS AV: Enhanced AI Processor f√∂r intelligent text analysis
üß™ PROCESSERING & OPTIMERING (PIPELINE COMPONENTS)
13. /backend/src/services/pipeline/response-optimizer.js
ROL: ‚ö° RESPONSE OPTIMIZATION - Optimerar svar f√∂r caching/transmission
ANSVAR:
Format standardization
Metadata stripping
Token optimization
Size reduction
MAPPAR: OCR_RESULTS, GOOGLE_VISION_OBJECTS, OPENAI_RESPONSES
14. /backend/src/services/pipeline/analytics-tracker.js
ROL: üìä ANALYTICS & METRICS - Sp√•rar usage, costs, performance
ANSVAR: Request tracking, cost tracking, performance metrics
üíæ CACHING SYSTEM (PERFORMANCE LAYER)
15. /backend/src/services/caching/cache-manager-simple.js
ROL: üöÄ CACHE MANAGER - Redis-baserad caching
ANSVAR:
generateKey() - Cache key generation
get() - Cache retrieval med graceful Redis error handling
set() - Cache storage med compression
ANV√ÑNDER: Basic Cache, Cache Key Strategy
16. /backend/src/services/caching/basic-cache.js
ROL: üîå REDIS CONNECTION - Low-level Redis operations
ANSVAR: Redis connection management, reconnection logic, health checks
17. /backend/src/services/caching/cache-key-strategy.js
ROL: üîë CACHE STRATEGY - Intelligent cache key generation
ANSVAR: Olika strategier f√∂r olika service types, TTL management
üë§ USER MANAGEMENT
18. /backend/src/services/user-service.ts
ROL: üë• USER PROFILES - User data, tiers, subscriptions
ANSVAR: getUserById(), tier verification, usage tracking